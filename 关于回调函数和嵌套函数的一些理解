首先说一下这两个函数看起来很像，所以有必要讲一下。
什么是嵌套函数？
嵌套函数可以写成这种形式：
const f = ()=>{return () => {return x =10;}};
简单来说就是一个函数套着一个函数，这里要提一下，在js里面function也是一个对象，所以我们可以用const来定义，第二个函数是一个匿名函数，和普通函数一样用。
区别只是在于没有名字，当然深层次的区别还是有的，匿名函数本身就是回调函数，这里先不提。
这个函数的执行结果是：
f()() 
10
注意以下执行第二个函数的时候要让指针指向第二个函数，也就是return，有的时候不用return也是可以的，但是这个浏览器一定要return，不知道是什么内核的。
当然原理上是要的。
如果你在f（）前面定义个方法变量，那没每次执行这个方法就是从第二段开始执行的，所以变量会存在里面，这个我以前提过。
然后就是后调函数，回调函数也就是callback函数，两者是一样的。
举个例子：
const f = f1 =>(x,y) => f1(x)+f1(y) //f = (f1)=> {(x,y) => {f1(x)+f1(y)}}
const f2 = f((x)=>{return 10*x})(10,20)
得到的记过是300
其实可以写成这样:
const f = function(f1){return function(x,y){return f1(x)+f1(y)}};
const f1 = (x)=> {return x*10}
const result = f(f1)(10,20)
其实也就是现执行f方程， 结果得到f1（x）+f1（y），然后在调用f1来执行结果。
按照我的逻辑来写就是f（10，20）（f1）,不过别人文法规定了也没有办法。
这个后调函数就是所有异步函数的基础，主程序执行的结果传递给回调函数，执行回调函数，然后通过event loop引擎，或者别的引擎将结果传递出来。告诉操作者，
功能已经实现。

顺便提一下我最近做的mongoose 和express框架， 第一个是让mongdb的操作更加简单，第二个是为了建立网站。详细的东西，我以后再写。
